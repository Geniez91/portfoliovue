name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: front-end-portfolio/package-lock.json

      - name: Install dependencies front-end
        run: npm ci
        working-directory: front-end-portfolio

      - name: Build project
        run: npm run build --if-present
        working-directory: front-end-portfolio

      - name: Run tests
        run: npm test
        working-directory: front-end-portfolio

      - name: Check TypeScript Version
        run: npx tsc -v
        working-directory: back-end-portfolio  



      - name: Install dependencies back-end
        run: npm ci
        working-directory: back-end-portfolio

        - name: Disable strict mode in TypeScript (GitHub Actions only)
  run: |
    if [ "$GITHUB_ACTIONS" = "true" ]; then
      jq '.compilerOptions.strict = false' tsconfig.json > tmp.json && mv tmp.json tsconfig.json
    fi
  working-directory: back-end-portfolio


      - name: Check Installed Packages
        run: npm list class-transformer
        working-directory: back-end-portfolio

      - name: Build project
        run: npm run build --if-present
        working-directory: back-end-portfolio


      - name: Create and push tag
        if: success()
        run: |
          TAG_NAME="v$(date +'%Y%m%d%H%M%S')"  # Génère un tag basé sur la date et l'heure
          git tag $TAG_NAME
          git push origin $TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      
